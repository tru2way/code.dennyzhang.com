* Leetcode: Valid Mountain Array                                 :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     mountainarray
:END:
---------------------------------------------------------------------
Valid Mountain Array
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-mountain-array"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
---------------------------------------------------------------------
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/followup-mountainarray][#mountainarray]]
Given an array A of integers, return true if and only if it is a valid mountain array.

Recall that A is a mountain array if and only if:

1. A.length >= 3

2. There exists some i with 0 < i < A.length - 1 such that:
 - A[0] < A[1] < ... A[i-1] < A[i]
 - A[i] > A[i+1] > ... > A[B.length - 1]
 
Example 1:
#+BEGIN_EXAMPLE
Input: [2,1]
Output: false
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [3,5,5]
Output: false
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: [0,3,2,1]
Output: true
#+END_EXAMPLE
 
Note:

1. 0 <= A.length <= 10000
- 0 <= A[i] <= 10000 

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-mountain-array][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/valid-mountain-array/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC go
// https://code.dennyzhang.com/valid-mountain-array
// Basic Ideas: simple scan
// Complexity: Time O(n), Space O(1)
func validMountainArray(A []int) bool {
    if len(A) < 3 || A[1] <= A[0] { return false }
    // find the first part
    i := 1
    for i < len(A) -1 && A[i] < A[i+1] {
        i++
    }
    if i == len(A) -1 { return false }
    for i < len(A) -1 && A[i] > A[i+1] {
        i++
    }
    return i == len(A) - 1
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
