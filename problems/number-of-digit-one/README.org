* Leetcode: Number of Digit One                                   :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math
:END:
---------------------------------------------------------------------
Number of Digit One
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/number-of-digit-one"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/digit-count-in-range][Leetcode: Digit Count in Range]]
- [[https://code.dennyzhang.com/strobogrammatic-number][Leetcode: Strobogrammatic Number]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-math][math]]
---------------------------------------------------------------------
Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.

For example:
#+BEGIN_EXAMPLE
Given n = 13,
Return 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/number-of-digit-one][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/number-of-digit-one/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC go
// https://code.dennyzhang.com/number-of-digit-one
// Basic Ideas: recursive
//
//  How many 1s in each digit.
//  Start from right to left, which is low digits to high digits
//
//  xyzabcd
//    For the thousand digit,
//
//    if a==0, (xyz-1)*1000 + 1000 = xyz*1000
//    if a==1, xyz*1000 + bcd + 1
//    if a>1,  xyz*1000 + 1000
//
// Complexity: Time O(log(n)), Space O(1)
func countDigitOne(n int) int {
    res := 0
    v := n
    power:=1
    for v!=0 {
        digit := v%10
        v /= 10
        res += v*power
        if digit == 1 {
            res += n%power+1
        }
        if digit > 1 {
            res += power
        }
        power *= 10
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
